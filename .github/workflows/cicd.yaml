name: Laravel CI/CD (MySQL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laracicd
          MYSQL_USER: polindra
          MYSQL_PASSWORD: polindra
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -p$$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, ctype, fileinfo, openssl, PDO, tokenizer, xml, mysql, pdo_mysql
        coverage: none

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --no-progress

    - name: Configure MySQL
      run: |
        cp .env.example .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=laracicd/' .env
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=polindra/' .env
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=polindra/' .env

    - name: Generate app key
      run: php artisan key:generate

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..5}; do
          if mysqladmin ping -h 127.0.0.1 -u polindra -p polindra --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... Attempt $i/5"
          sleep 3
        done

    - name: Run database migrations
      run: php artisan migrate:fresh

    - name: Create zip for deployment
      run: |
        zip -r laravel.zip . -x ".git/*" "node_modules/*" "vendor/*" ".github/*" "storage/debugbar/*"

    - name: Upload zipped artifact
      uses: actions/upload-artifact@v4
      with:
        name: laravel-d4rpl2b-kelompok-6
        path: laravel.zip
        retention-days: 1

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: laravel-d4rpl2b-kelompok-6
        path: ./deploy

    - name: Unzip artifact
      run: |
        unzip ./deploy/laravel.zip -d ./deploy

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        port: 22

    - name: Deploy to server via SCP/SSH
      run: |
        ssh -o StrictHostKeyChecking=no -p 22 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ~/laravel-temp-deploy"

        scp -o StrictHostKeyChecking=no -P 22 -r ./deploy/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/laravel-temp-deploy/

        ssh -o StrictHostKeyChecking=no -p 22 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ~/laravel-temp-deploy

          sudo rsync -avz --delete \
            --exclude='.env' \
            --exclude='storage' \
            --exclude='.git' \
            --exclude='.github' \
            ~/laravel-temp-deploy/ /var/www/laravel-d4rpl2b-kelompok-6/

          sudo chown -R www-data:www-data /var/www/laravel-d4rpl2b-kelompok-6
          sudo chmod -R 755 /var/www/laravel-d4rpl2b-kelompok-6/storage
          sudo chmod -R 755 /var/www/laravel-d4rpl2b-kelompok-6/bootstrap/cache

          cd /var/www/laravel-d4rpl2b-kelompok-6
          sudo -u www-data composer install --optimize-autoloader --no-dev
          sudo -u www-data php artisan config:cache
          sudo -u www-data php artisan route:cache
          sudo -u www-data php artisan view:cache
          sudo -u www-data php artisan migrate --force

          rm -rf ~/laravel-temp-deploy
        EOF
